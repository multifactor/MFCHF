{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-17T18:10:10.852Z",
    "end": "2023-10-17T18:10:11.753Z",
    "duration": 901,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e0b16399-9b93-4ca7-ab06-67652bb2218d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
          "title": "hotp6",
          "fullFile": "C:\\xampp\\htdocs\\Multifactor\\mfchf\\test\\hotp6.js",
          "file": "\\test\\hotp6.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "password/invalid",
              "fullTitle": "hotp6 password/invalid",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mfchf.hotp6.setup(123456).should.be.rejectedWith(TypeError)\nmfchf.hotp6.setup('').should.be.rejectedWith(RangeError)\nmfchf.hotp6.verify('mh6a2id:', 123456, 123456).should.be.rejectedWith(TypeError)\nmfchf.hotp6.verify('mh6a2id:', '', 123456).should.be.rejectedWith(RangeError)",
              "err": {},
              "uuid": "48b11dfe-bc8d-4f69-8d62-4622ab523bec",
              "parentUUID": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "hash/invalid",
              "fullTitle": "hotp6 hash/invalid",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mfchf.hotp6.verify(123456, 'password123', 123456).should.be.rejectedWith(TypeError)\nmfchf.hotp6.verify('mt6a2id:', '', 123456).should.be.rejectedWith(TypeError)",
              "err": {},
              "uuid": "77944398-5953-4b69-abcd-d50cf6f6c813",
              "parentUUID": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "code/invalid",
              "fullTitle": "hotp6 code/invalid",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mfchf.hotp6.verify('mh6a2id:', 'password123', 'hello').should.be.rejectedWith(TypeError)",
              "err": {},
              "uuid": "ca91ca34-b4ed-46c8-b236-d1b0b212f185",
              "parentUUID": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "types",
              "fullTitle": "hotp6 types",
              "timedOut": false,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { hash, secret } = await mfchf.hotp6.setup('password123')\nhash.should.be.a('string')\nsecret.should.be.instanceof(Buffer)\nconst otp = parseInt(hotp({ secret, counter: 1 }))\nconst result = await mfchf.hotp6.verify(hash, 'password123', otp)\nresult.hash.should.be.a('string')\nresult.valid.should.be.a('boolean')",
              "err": {},
              "uuid": "1d3461c5-50b2-47ad-a2d8-bac069de50e9",
              "parentUUID": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "example",
              "fullTitle": "hotp6 example",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup MFCHF-HOTP6 hash\nconst { hash, secret } = await mfchf.hotp6.setup('password123')\n// Verify MFCHF-HOTP6 hash\nconst otp = parseInt(hotp({ secret, counter: 1 }))\nconst result = await mfchf.hotp6.verify(hash, 'password123', otp)\nresult.valid.should.be.true",
              "err": {},
              "uuid": "19660d72-6766-4377-817a-e823ebb12605",
              "parentUUID": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "full",
              "fullTitle": "hotp6 full",
              "timedOut": false,
              "duration": 628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { hash, secret } = await mfchf.hotp6.setup('password123')\nlet otp = parseInt(hotp({ secret, counter: 1 }))\nlet fake = await mfchf.hotp6.verify(hash, 'password321', otp)\nfake.valid.should.be.false\nfake = await mfchf.hotp6.verify(hash, 'password123', 999999 - otp)\nfake.valid.should.be.false\nlet result = await mfchf.hotp6.verify(hash, 'password123', otp)\nresult.valid.should.be.true\notp = parseInt(hotp({ secret, counter: 2 }))\nfake = await mfchf.hotp6.verify(hash, 'password321', otp)\nfake.valid.should.be.false\nfake = await mfchf.hotp6.verify(hash, 'password123', 999999 - otp)\nfake.valid.should.be.false\nresult = await mfchf.hotp6.verify(result.hash, 'password123', otp)\nresult.valid.should.be.true\notp = parseInt(hotp({ secret, counter: 3 }))\nfake = await mfchf.hotp6.verify(hash, 'password321', otp)\nfake.valid.should.be.false\nfake = await mfchf.hotp6.verify(hash, 'password123', 999999 - otp)\nfake.valid.should.be.false\nresult = await mfchf.hotp6.verify(result.hash, 'password123', otp)\nresult.valid.should.be.true",
              "err": {},
              "uuid": "62965dcc-9a4c-4ba1-bcb0-ccf18239cc85",
              "parentUUID": "42dcada5-eb38-4cc0-84f0-ef136f18c68f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48b11dfe-bc8d-4f69-8d62-4622ab523bec",
            "77944398-5953-4b69-abcd-d50cf6f6c813",
            "ca91ca34-b4ed-46c8-b236-d1b0b212f185",
            "1d3461c5-50b2-47ad-a2d8-bac069de50e9",
            "19660d72-6766-4377-817a-e823ebb12605",
            "62965dcc-9a4c-4ba1-bcb0-ccf18239cc85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 892,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c551a238-2177-4fb1-a1c5-fc34d0813aaf",
          "title": "default",
          "fullFile": "C:\\xampp\\htdocs\\Multifactor\\mfchf\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "default",
              "fullTitle": "default default",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mfchf",
              "err": {},
              "uuid": "69dcb6fa-db99-4f2e-8f98-51ec3e36164f",
              "parentUUID": "c551a238-2177-4fb1-a1c5-fc34d0813aaf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69dcb6fa-db99-4f2e-8f98-51ec3e36164f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./site/mochawesome"
      },
      "version": "6.2.0"
    }
  }
}